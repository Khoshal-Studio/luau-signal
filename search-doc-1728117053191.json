[{"title":"connection","type":0,"sectionRef":"#","url":"/luau-signal/api/connection","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#types","content":" "},{"title":"connection​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#connection","content":"&lt;/&gt; interface connection { Disconnect: (self: connection) → () } A connection object that can be used to disconnect the signal handler. "},{"title":"Functions​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#functions","content":" "},{"title":"Disconnect​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#Disconnect","content":"&lt;/&gt; connection:Disconnect() → () Disconnects the connection from the signal. "},{"title":"immutable_signal","type":0,"sectionRef":"#","url":"/luau-signal/api/immutable_signal","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"immutable_signal","url":"/luau-signal/api/immutable_signal#types","content":" "},{"title":"immutable_signal​","type":1,"pageTitle":"immutable_signal","url":"/luau-signal/api/immutable_signal#immutable_signal","content":"&lt;/&gt; interface immutable_signal { Connect: ( self: immutable_signal, handler: (...any) → () ) → connection Wait: (self: immutable_signal) → ...any Once: ( self: immutable_signal, handler: (...any) → () ) → connection } A signal object that can be connected to but does not have DisconnectAll or Fire methods. "},{"title":"Functions​","type":1,"pageTitle":"immutable_signal","url":"/luau-signal/api/immutable_signal#functions","content":" "},{"title":"Connect​","type":1,"pageTitle":"immutable_signal","url":"/luau-signal/api/immutable_signal#Connect","content":"&lt;/&gt; immutable_signal:Connect(handler: (...any) → ()) → connection Connects a handler function to the signal. Refer to the signal.Connect method for more information.  "},{"title":"Wait​","type":1,"pageTitle":"immutable_signal","url":"/luau-signal/api/immutable_signal#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; immutable_signal:Wait() → ...any Waits for the signal to be fired and returns the arguments that were passed to the signal when it was fired. Refer to the signal.Wait method for more information.  "},{"title":"Once​","type":1,"pageTitle":"immutable_signal","url":"/luau-signal/api/immutable_signal#Once","content":"&lt;/&gt; immutable_signal:Once(handler: (...any) → ()) → connection Connects a handler function to the signal that will only be called once. Refer to the signal.Once method for more information. "},{"title":"restricted_signal","type":0,"sectionRef":"#","url":"/luau-signal/api/restricted_signal","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"restricted_signal","url":"/luau-signal/api/restricted_signal#types","content":" "},{"title":"restricted_signal​","type":1,"pageTitle":"restricted_signal","url":"/luau-signal/api/restricted_signal#restricted_signal","content":"&lt;/&gt; interface restricted_signal { Connect: ( self: restricted_signal, handler: (...any) → () ) → connection DisconnectAll: (self: restricted_signal) → () Wait: (self: restricted_signal) → ...any Once: ( self: restricted_signal, handler: (...any) → () ) → connection Immutable: immutable_signal } A signal object that can be connected to but does not have the Fire method. "},{"title":"Functions​","type":1,"pageTitle":"restricted_signal","url":"/luau-signal/api/restricted_signal#functions","content":" "},{"title":"Connect​","type":1,"pageTitle":"restricted_signal","url":"/luau-signal/api/restricted_signal#Connect","content":"&lt;/&gt; restricted_signal:Connect(handler: (...any) → ()) → connection Connects a handler function to the signal. Refer to the signal.Connect method for more information.  "},{"title":"DisconnectAll​","type":1,"pageTitle":"restricted_signal","url":"/luau-signal/api/restricted_signal#DisconnectAll","content":"&lt;/&gt; restricted_signal:DisconnectAll() → () Disconnects all handler functions from the signal. Refer to the signal.DisconnectAll method for more information.  "},{"title":"Wait​","type":1,"pageTitle":"restricted_signal","url":"/luau-signal/api/restricted_signal#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; restricted_signal:Wait() → ...any Waits for the signal to be fired and returns the arguments that were passed to the signal when it was fired. Refer to the signal.Wait method for more information.  "},{"title":"Once​","type":1,"pageTitle":"restricted_signal","url":"/luau-signal/api/restricted_signal#Once","content":"&lt;/&gt; restricted_signal:Once(handler: (...any) → ()) → connection Connects a handler function to the signal that will only be called once. Refer to the signal.Once method for more information. "},{"title":"signal","type":0,"sectionRef":"#","url":"/luau-signal/api/signal","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#types","content":" "},{"title":"signal​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal","content":"&lt;/&gt; interface signal { Connect: ( self: signal, handler: (...any) → () ) → connection DisconnectAll: (self: signal) → () Fire: ( self: signal, ...any ) → () Wait: (self: signal) → ...any Once: ( self: signal, handler: (...any) → () ) → connection Restricted: restricted_signal Immutable: immutable_signal } A signal object that can be connected to and fired. "},{"title":"Functions​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#functions","content":" "},{"title":"Connect​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#Connect","content":"&lt;/&gt; signal:Connect(handler: (...any) → ()) → connection Connects a handler function to the signal.  "},{"title":"DisconnectAll​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#DisconnectAll","content":"&lt;/&gt; signal:DisconnectAll() → () Disconnects all handler functions from the signal.  "},{"title":"Fire​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#Fire","content":"&lt;/&gt; signal:Fire(...: any) → () Fires the signal with the given arguments.  "},{"title":"Wait​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; signal:Wait() → ...any Waits for the signal to be fired and returns the arguments that were passed to the signal when it was fired.  "},{"title":"Once​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#Once","content":"&lt;/&gt; signal:Once(handler: (...any) → ()) → connection Connects a handler function to the signal that will only be called once. "}]
[{"title":"signal","type":0,"sectionRef":"#","url":"/luau-signal/api/signal","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#types","content":" "},{"title":"connection​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#connection","content":"&lt;/&gt; type connection = {} Disconnect: (self: connection) -&gt; () } A connection object that can be used to disconnect the signal handler.  "},{"title":"signal​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal","content":"&lt;/&gt; type signal = {} Connect: (self: signal, handler: (...any) -&gt; ()) -&gt; connection, DisconnectAll: (self: signal) -&gt; (), Fire: (self: signal, ...any) -&gt; (), Wait: (self: signal) -&gt; ...any, Once: (self: signal, handler: (...any) -&gt; ()) -&gt; connection, } A signal object that can be connected to and fired.  "},{"title":"fire_fn​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#fire_fn","content":"&lt;/&gt; type fire_fn = {} (...any) -&gt; () } A function that fires the signal with the given arguments.  "},{"title":"restricted_signal​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#restricted_signal","content":"&lt;/&gt; type restricted_signal = {} Connect: (self: restricted_signal, handler: (...any) -&gt; ()) -&gt; connection, DisconnectAll: (self: restricted_signal) -&gt; (), Wait: (self: restricted_signal) -&gt; ...any, Once: (self: restricted_signal, handler: (...any) -&gt; ()) -&gt; connection, } A restricted signal object that can be connected to and fired. "},{"title":"Functions​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#functions","content":" "},{"title":"connection_new​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#connection_new","content":"&lt;/&gt; signal.connection_new( signal: : signal—Thesignalobject., fn: : `(...any) → ()`—Thesignalhandlerfunction. ) → connection: connection—Theconnectionobject. Creates a connection object that can be used to disconnect the signal handler.  "},{"title":"signal.new​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.new","content":"&lt;/&gt; signal.signal.new() → signal: `signal`—Thesignalobject. Creates a new signal object.  "},{"title":"signal.DisconnectAll​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.DisconnectAll","content":"&lt;/&gt; signal.signal.DisconnectAll(self: : `signal`—Thesignalobject.) → () Disconnects all handler functions from the signal.  "},{"title":"signal.Fire​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.Fire","content":"&lt;/&gt; signal.signal.Fire( self: : `signal`—Thesignalobject., ...: : `any`—Theargumentstopasstothesignalhandlers. ) → () Fires the signal with the given arguments.  "},{"title":"signal.Wait​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; signal.signal.Wait(self: : `signal`—Thesignalobject.) → ...: `any`—Theargumentspassedtothesignalhandlers. Yields the current thread until the signal is fired.  "},{"title":"signal.Once​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.Once","content":"&lt;/&gt; signal.signal.Once( self: : `signal`—Thesignalobject., fn: : `(...any) → ()`—Thesignalhandlerfunction. ) → connection: `connection`—Theconnectionobject. Connects a handler function to the signal that will only be called once.  "},{"title":"Connect​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#Connect","content":"&lt;/&gt; signal:Connect( self: : signal—Thesignalobject., fn: : `(...any) → ()`—Thesignalhandlerfunction. ) → connection: `connection`—Theconnectionobject. Connects a handler function to the signal. "}]
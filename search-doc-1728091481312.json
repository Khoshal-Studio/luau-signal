[{"title":"test","type":0,"sectionRef":"#","url":"/luau-signal/api/test","content":"On this page test This is a test class","keywords":""},{"title":"connection","type":0,"sectionRef":"#","url":"/luau-signal/api/connection","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#types","content":" "},{"title":"connection​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#connection","content":"&lt;/&gt; type connection = {} A connection object that can be used to disconnect the signal handler. Disconnect: (self: disconnect) -&gt; () } "},{"title":"Functions​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#functions","content":" "},{"title":"Disconnect​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#Disconnect","content":"&lt;/&gt; connection:Disconnect() → () Disconnects the connection from the signal. "},{"title":"signal","type":0,"sectionRef":"#","url":"/luau-signal/api/signal","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#types","content":" "},{"title":"signal​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal","content":"&lt;/&gt; type signal = {} Connect: (self: signal, handler: (...any) -&gt; ()) -&gt; connection, DisconnectAll: (self: signal) -&gt; (), Fire: (self: signal, ...any) -&gt; (), Wait: (self: signal) -&gt; ...any, Once: (self: signal, handler: (...any) -&gt; ()) -&gt; connection, } A signal object that can be connected to and fired.  "},{"title":"fire_fn​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#fire_fn","content":"&lt;/&gt; type fire_fn = {} (...any) -&gt; () } A function that fires the signal with the given arguments.  "},{"title":"restricted_signal​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#restricted_signal","content":"&lt;/&gt; type restricted_signal = {} Connect: (self: restricted_signal, handler: (...any) -&gt; ()) -&gt; connection, DisconnectAll: (self: restricted_signal) -&gt; (), Wait: (self: restricted_signal) -&gt; ...any, Once: (self: restricted_signal, handler: (...any) -&gt; ()) -&gt; connection, } A restricted signal object that can be connected to and fired. "},{"title":"Functions​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#functions","content":" "},{"title":"signal.new​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.new","content":"&lt;/&gt; signal.signal.new() → signal Creates a new signal object.  "},{"title":"Connect​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#Connect","content":"&lt;/&gt; signal:Connect( self: : signal, fn: : (...any) → () ) → connection Connects a handler function to the signal.  "},{"title":"signal.DisconnectAll​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.DisconnectAll","content":"&lt;/&gt; signal:signal.DisconnectAll(self: : signal) → () Disconnects all handler functions from the signal.  "},{"title":"signal.Fire​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.Fire","content":"&lt;/&gt; signal:signal.Fire() → () Fires the signal with the given arguments.  "},{"title":"signal.Wait​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; signal:signal.Wait(self: : signal) → ...: ...any Yields the current thread until the signal is fired.  "},{"title":"signal.Once​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal.Once","content":"&lt;/&gt; signal:signal.Once( self: : signal, fn: : (...any) → (). ) → connection Connects a handler function to the signal that will only be called once. "}]
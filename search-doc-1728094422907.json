[{"title":"restricted_signal","type":0,"sectionRef":"#","url":"/luau-signal/api/restricted_signal","content":"On this page restricted_signal A restricted signal object that can only be connected to.","keywords":""},{"title":"immutable_signal","type":0,"sectionRef":"#","url":"/luau-signal/api/immutable_signal","content":"On this page immutable_signal An immutable signal object that can only be connected to.","keywords":""},{"title":"connection","type":0,"sectionRef":"#","url":"/luau-signal/api/connection","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#types","content":" "},{"title":"connection​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#connection","content":"&lt;/&gt; type connection = {Disconnect: (self: any) → ()} A connection object that can be used to disconnect the signal handler. "},{"title":"Functions​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#functions","content":" "},{"title":"Disconnect​","type":1,"pageTitle":"connection","url":"/luau-signal/api/connection#Disconnect","content":"&lt;/&gt; connection:Disconnect() → () Disconnects the connection from the signal. "},{"title":"signal","type":0,"sectionRef":"#","url":"/luau-signal/api/signal","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#types","content":" "},{"title":"signal​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal","content":"&lt;/&gt; type signal = { Connect: ( self: signal, handler: (...any) → () ) → connection, DisconnectAll: (self: signal) → (), Fire: ( self: signal, ...any ) → (), Wait: (self: signal) → ...any, Once: ( self: signal, handler: (...any) → () ) → connection, Restricted: restricted_signal, Immutable: immutable_signal } A signal object that can be connected to and fired.  "},{"title":"restricted_signal​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#restricted_signal","content":"&lt;/&gt; type restricted_signal = {} Connect: (self: restricted_signal, handler: (...any) -&gt; ()) -&gt; connection, DisconnectAll: (self: restricted_signal) -&gt; (), Wait: (self: restricted_signal) -&gt; ...any, Once: (self: restricted_signal, handler: (...any) -&gt; ()) -&gt; connection, Immutable : immutable_signal} A restricted signal object that can be connected to and fired.  "},{"title":"immutable_signal​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#immutable_signal","content":"&lt;/&gt; type immutable_signal = {} Connect: (self: immutable_signal, handler: (...any) -&gt; ()) -&gt; connection, Wait: (self: immutable_signal) -&gt; ...any, Once: (self: immutable_signal, handler: (...any) -&gt; ()) -&gt; connection} An immutable signal object that can only be connected to. "},{"title":"Functions​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#functions","content":" "},{"title":"Connect​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#Connect","content":"&lt;/&gt; signal:Connect() → () Connects a handler function to the signal.  "},{"title":"DisconnectAll​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#DisconnectAll","content":"&lt;/&gt; signal:DisconnectAll() → () Disconnects all handler functions from the signal.  "},{"title":"Fire​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#Fire","content":"&lt;/&gt; signal:Fire() → () Fires the signal with the given arguments.  "},{"title":"Wait​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; signal:Wait() → () Waits for the signal to be fired and returns the arguments that were passed to the signal when it was fired.  "},{"title":"signal:Once​","type":1,"pageTitle":"signal","url":"/luau-signal/api/signal#signal:Once","content":"&lt;/&gt; signal:signal:Once() → () Connects a handler function to the signal that will only be called once. "}]
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[728],{14826:n=>{n.exports=JSON.parse('{"functions":[{"name":"connection_new","desc":"Creates a connection object that can be used to disconnect the signal handler.","params":[{"name":"signal","desc":"","lua_type":": signal \u2014 The signal object."},{"name":"fn","desc":"","lua_type":": `(...any) -> ()` \u2014 The signal handler function."}],"returns":[{"desc":"","lua_type":"connection : connection \u2014 The connection object."}],"function_type":"static","source":{"line":26,"path":"src/init.luau"}},{"name":"signal.new","desc":"Creates a new signal object.","params":[],"returns":[{"desc":"","lua_type":"signal : `signal` \u2014 The signal object."}],"function_type":"static","source":{"line":85,"path":"src/init.luau"}},{"name":"Connect","desc":"Connects a handler function to the signal.\\n\\n    ","params":[{"name":"self","desc":"","lua_type":": signal \u2014 The signal object."},{"name":"fn","desc":"","lua_type":": `(...any) -> ()` \u2014 The signal handler function."}],"returns":[{"desc":"","lua_type":"connection : `connection` \u2014 The connection object."}],"function_type":"method","source":{"line":102,"path":"src/init.luau"}},{"name":"signal.DisconnectAll","desc":"Disconnects all handler functions from the signal.\\n\\n    ","params":[{"name":"self","desc":"","lua_type":": `signal` \u2014 The signal object."}],"returns":[],"function_type":"static","source":{"line":122,"path":"src/init.luau"}},{"name":"signal.Fire","desc":"Fires the signal with the given arguments.\\n\\n    ","params":[{"name":"self","desc":"","lua_type":": `signal` \u2014 The signal object."},{"name":"...","desc":"","lua_type":": `any` \u2014 The arguments to pass to the signal handlers."}],"returns":[],"function_type":"static","source":{"line":135,"path":"src/init.luau"}},{"name":"signal.Wait","desc":"Yields the current thread until the signal is fired.\\n\\n    ","params":[{"name":"self","desc":"","lua_type":": `signal` \u2014 The signal object."}],"returns":[{"desc":"","lua_type":"... : `any` \u2014 The arguments passed to the signal handlers."}],"function_type":"static","yields":true,"source":{"line":156,"path":"src/init.luau"}},{"name":"signal.Once","desc":"Connects a handler function to the signal that will only be called once.\\n\\n    ","params":[{"name":"self","desc":"","lua_type":": `signal` \u2014 The signal object."},{"name":"fn","desc":"","lua_type":": `(...any) -> ()` \u2014 The signal handler function."}],"returns":[{"desc":"","lua_type":"connection : `connection` \u2014 The connection object."}],"function_type":"static","source":{"line":177,"path":"src/init.luau"}}],"properties":[],"types":[{"name":"connection","desc":"    Disconnect: (self: connection) -> ()\\n}\\nA connection object that can be used to disconnect the signal handler.","lua_type":"{","source":{"line":14,"path":"src/types.luau"}},{"name":"signal","desc":"    Connect: (self: signal, handler: (...any) -> ()) -> connection,\\n    DisconnectAll: (self: signal) -> (),\\n    Fire: (self: signal, ...any) -> (),\\n    Wait: (self: signal) -> ...any,\\n    Once: (self: signal, handler: (...any) -> ()) -> connection,\\n}\\nA signal object that can be connected to and fired.","lua_type":"{","source":{"line":48,"path":"src/types.luau"}},{"name":"fire_fn","desc":"    (...any) -> ()\\n}\\nA function that fires the signal with the given arguments.","lua_type":"{","source":{"line":70,"path":"src/types.luau"}},{"name":"restricted_signal","desc":"    Connect: (self: restricted_signal, handler: (...any) -> ()) -> connection,\\n    DisconnectAll: (self: restricted_signal) -> (),\\n    Wait: (self: restricted_signal) -> ...any,\\n    Once: (self: restricted_signal, handler: (...any) -> ()) -> connection,\\n}\\nA restricted signal object that can be connected to and fired.","lua_type":"{","source":{"line":81,"path":"src/types.luau"}}],"name":"signal","desc":"A signal object that can be connected to and fired.","source":{"line":77,"path":"src/init.luau"}}')}}]);